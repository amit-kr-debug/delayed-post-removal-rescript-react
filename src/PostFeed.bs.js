// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Post from "./post.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_MapString from "bs-platform/lib/es6/belt_MapString.js";

function s(prim) {
  return prim;
}

function reducer(state, action) {
  switch (action.TAG | 0) {
    case /* DeleteLater */0 :
        return {
                posts: state.posts,
                forDeletion: Belt_MapString.set(state.forDeletion, action._0.id, action._1)
              };
    case /* DeleteAbort */1 :
        return {
                posts: state.posts,
                forDeletion: Belt_MapString.remove(state.forDeletion, action._0.id)
              };
    case /* DeleteNow */2 :
        var post = action._0;
        return {
                posts: state.posts.filter(function (existing_post) {
                      return Post.id(existing_post) !== post.id;
                    }),
                forDeletion: Belt_MapString.remove(state.forDeletion, post.id)
              };
    
  }
}

var initialState = {
  posts: Post.examples,
  forDeletion: undefined
};

function PostFeed$PostView(Props) {
  var post = Props.post;
  var dispatch = Props.dispatch;
  var postText = Props.postText;
  return React.createElement("div", {
              className: "bg-green-200 hover:bg-green-300 text-gray-800 hover:text-gray-900 px-8 py-4 mb-4 rounded"
            }, React.createElement("h2", {
                  className: "text-2xl mb-1"
                }, post.title), React.createElement("h3", {
                  className: "mb-4"
                }, post.author), Curry._1(postText, post.text), React.createElement("button", {
                  className: "mr-4 mt-4 bg-red-600 hover:bg-red-700 text-white py-2 px-4 ",
                  onClick: (function (_mouseEvt) {
                      return Curry._1(dispatch, {
                                  TAG: /* DeleteLater */0,
                                  _0: post,
                                  _1: setTimeout((function (param) {
                                          return Curry._1(dispatch, {
                                                      TAG: /* DeleteNow */2,
                                                      _0: post
                                                    });
                                        }), 10000)
                                });
                    })
                }, "Remove this post"));
}

var PostView = {
  make: PostFeed$PostView
};

function PostFeed$DeleteNotificationView(Props) {
  var post = Props.post;
  var state = Props.state;
  var dispatch = Props.dispatch;
  return React.createElement("div", {
              className: "relative bg-yellow-100 px-8 py-4 mb-4 h-40"
            }, React.createElement("p", {
                  className: "text-center white mb-1"
                }, "This post from " + post.title + " by " + post.author + " will be permanently removed in 10 seconds."), React.createElement("div", {
                  className: "flex justify-center"
                }, React.createElement("button", {
                      className: "mr-4 mt-4 bg-yellow-500 hover:bg-yellow-900 text-white py-2 px-4",
                      onClick: (function (_mouseEvt) {
                          clearTimeout(Belt_MapString.getExn(state.forDeletion, post.id));
                          return Curry._1(dispatch, {
                                      TAG: /* DeleteAbort */1,
                                      _0: post
                                    });
                        })
                    }, "Restore"), React.createElement("button", {
                      className: "mr-4 mt-4 bg-red-600 hover:bg-red-700 text-white py-2 px-4",
                      onClick: (function (_mouseEvt) {
                          clearTimeout(Belt_MapString.getExn(state.forDeletion, post.id));
                          return Curry._1(dispatch, {
                                      TAG: /* DeleteNow */2,
                                      _0: post
                                    });
                        })
                    }, "Delete Immediately")), React.createElement("div", {
                  className: "bg-red-600 h-2 w-full absolute top-0 left-0 progress"
                }));
}

var DeleteNotificationView = {
  make: PostFeed$DeleteNotificationView
};

function PostFeed(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  return Belt_Array.map(state.posts, (function (post) {
                if (Belt_MapString.has(state.forDeletion, post.id)) {
                  return React.createElement(PostFeed$DeleteNotificationView, {
                              post: post,
                              state: state,
                              dispatch: dispatch
                            });
                }
                var postText = function (text) {
                  return Belt_Array.map(text, (function (line) {
                                return React.createElement("p", {
                                            className: "mb-1 text-sm"
                                          }, line);
                              }));
                };
                return React.createElement(PostFeed$PostView, {
                            post: post,
                            dispatch: dispatch,
                            postText: postText
                          });
              }));
}

var make = PostFeed;

export {
  s ,
  reducer ,
  initialState ,
  PostView ,
  DeleteNotificationView ,
  make ,
  
}
/* Post Not a pure module */
